import sys

_lastWasRegion = False

def _emitSubTexture(name, x, y, w, h):
    print '\t<SubTexture name="%s" x="%d" y="%d" width="%d" height="%d" frameX="0" frameY="0" frameWidth="%d" frameHeight="%d"/>' % (name, x, y, w, h, w, h)

def emitHeader(imgname):
    print '<?xml version="1.0" encoding="UTF-8"?>'
    print '<TextureAtlas imagePath="%s">' % imgname
    print
    print '\t<!-- NOTE: this file was generated by atlasXMLGen.py -->'
    _lastWasRegion = False

def emitFooter():
    print
    print '</TextureAtlas>'
    _lastWasRegion = False

def emitComment(cmt):
    print
    print '\t<!-- %s -->' % cmt
    _lastWasRegion = False

def emitRegion(name, x, y, w, h):
    global _lastWasRegion

    if not _lastWasRegion:
        print

    _emitSubTexture(name, x, y, w, h)
    _lastWasRegion = True

def emitNineSlice(name, x, y, w, h, cx, cy, cx2=-1, cy2=-1):
    if cx2 < 0:
        cx2 = cx
    if cy2 < 0:
        cy2 = cy

    x0 = x
    x1 = x + cx
    x2 = x + w - cx2
    y0 = y
    y1 = y + cy
    y2 = y + h - cy2
    iw = w - cx - cx2
    ih = h - cy - cy2

    rects = [
        (name, x, y, w, h),
        
        (name + "TopLeft", x0, y0, cx, cy),
        (name + "TopRight", x2, y0, cx2, cy),
        (name + "BottomLeft", x0, y2, cx, cy2),
        (name + "BottomRight", x2, y2, cx2, cy2),
        
        (name + "Top", x1, y0, iw, cy),
        (name + "Bottom", x1, y2, iw, cy2),
        (name + "Left", x0, y1, cx, ih),
        (name + "Right", x2, y1, cx2, ih),
        
        (name + "Center", x1, y1, iw, ih),
        ]

    print
    for rname, rx, ry, rw, rh in rects:
        _emitSubTexture(rname, rx, ry, rw, rh)
    _lastWasRegion = False

#name = sys.argv[1]
#x = int(sys.argv[2])
#y = int(sys.argv[3])
#w = int(sys.argv[4])
#h = int(sys.argv[5])
#cx = int(sys.argv[6])
#cy = int(sys.argv[7])
