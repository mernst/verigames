Constraints:
subtype constraint: Variable 2 at method CallLocal#<init>():V receiver parameter 0; tree <<missing tree>> within 
<init>() {
    super();
}Atm: @VarAnnot(2) CallLocal  <:  Variable 0 at class CallLocal extends type; tree <<missing tree>> within 
class CallLocal {
    
    CallLocal() {
        super();
    }
    
    void m1(Object o) {
    }
    
    Object m2() {
        return new Object();
    }
    
    void m3(CallLocal p) {
        p.m1(new Object());
        Object x = p.m2();
    }
}

subtype constraint: Variable 1 at method CallLocal#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class CallLocal extends type; tree <<missing tree>> within 
class CallLocal {
    
    CallLocal() {
        super();
    }
    
    void m1(Object o) {
    }
    
    Object m2() {
        return new Object();
    }
    
    void m3(CallLocal p) {
        p.m1(new Object());
        Object x = p.m2();
    }
}

subtype constraint: Variable 3 at method CallLocal#m1(Ljava/lang/Object;):V receiver parameter 0; tree <<missing tree>> within 
void m1(Object o) {
}Atm: @VarAnnot(3) CallLocal  <:  Variable 0 at class CallLocal extends type; tree <<missing tree>> within 
class CallLocal {
    
    CallLocal() {
        super();
    }
    
    void m1(Object o) {
    }
    
    Object m2() {
        return new Object();
    }
    
    void m3(CallLocal p) {
        p.m1(new Object());
        Object x = p.m2();
    }
}

subtype constraint: Variable 6 at method CallLocal#m2():Ljava/lang/Object; receiver parameter 0; tree <<missing tree>> within 
Object m2() {
    return new Object();
}Atm: @VarAnnot(6) CallLocal  <:  Variable 0 at class CallLocal extends type; tree <<missing tree>> within 
class CallLocal {
    
    CallLocal() {
        super();
    }
    
    void m1(Object o) {
    }
    
    Object m2() {
        return new Object();
    }
    
    void m3(CallLocal p) {
        p.m1(new Object());
        Object x = p.m2();
    }
}

inequality constraint at method CallLocal#m2():Ljava/lang/Object; constraint position: Variable 9 at method CallLocal#m2():Ljava/lang/Object; creation 0; tree Object != Constant(@nninf.quals.Nullable)

subtype constraint: Variable 9 at method CallLocal#m2():Ljava/lang/Object; creation 0; tree Object  <:  Variable 5 at method CallLocal#m2():Ljava/lang/Object; return type; tree Object

subtype constraint: Variable 7 at method CallLocal#m3(LCallLocal;):V receiver parameter 0; tree <<missing tree>> within 
void m3(CallLocal p) {
    p.m1(new Object());
    Object x = p.m2();
}Atm: @VarAnnot(7) CallLocal  <:  Variable 0 at class CallLocal extends type; tree <<missing tree>> within 
class CallLocal {
    
    CallLocal() {
        super();
    }
    
    void m1(Object o) {
    }
    
    Object m2() {
        return new Object();
    }
    
    void m3(CallLocal p) {
        p.m1(new Object());
        Object x = p.m2();
    }
}

inequality constraint at method CallLocal#m3(LCallLocal;):V constraint position: Variable 8 at method CallLocal#m3(LCallLocal;):V parameter 1; tree CallLocal != Constant(@nninf.quals.Nullable)

checkers.inference.InstanceMethodCallConstraint(
contextVp: method CallLocal#m3(LCallLocal;):V constraint position; 
calledVp: method CallLocal#m1(Ljava/lang/Object;):V; 
receiver: Variable 8 at method CallLocal#m3(LCallLocal;):V parameter 1; tree CallLocal; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: ( Variable 10 at method CallLocal#m3(LCallLocal;):V creation 0; tree Object ); 
result: List(); 
)

checkers.inference.InstanceMethodCallConstraint(
contextVp: method CallLocal#m3(LCallLocal;):V constraint position; 
calledVp: method CallLocal#m2():Ljava/lang/Object;; 
receiver: Variable 8 at method CallLocal#m3(LCallLocal;):V parameter 1; tree CallLocal; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Variable 5 at method CallLocal#m2():Ljava/lang/Object; return type; tree Object); 
)

subtype constraint: Variable 5 at method CallLocal#m2():Ljava/lang/Object; return type; tree Object  <:  Variable 11 at method CallLocal#m3(LCallLocal;):V local variable x(0); tree Object

checkers.inference.InstanceMethodCallConstraint(
contextVp: method CallLocal#m3(LCallLocal;):V constraint position; 
calledVp: method CallLocal#m2():Ljava/lang/Object;; 
receiver: Variable 8 at method CallLocal#m3(LCallLocal;):V parameter 1; tree CallLocal; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Variable 5 at method CallLocal#m2():Ljava/lang/Object; return type; tree Object); 
)

