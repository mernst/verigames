Constraints:
subtype constraint: Variable 3 at method Primitive#<init>():V receiver parameter 0; tree <<missing tree>> within 
<init>() {
    super();
}Atm: @VarAnnot(3) Primitive  <:  Variable 0 at class Primitive extends type; tree <<missing tree>> within 
class Primitive {
    
    Primitive() {
        super();
    }
    int i = 5;
    
    int m(int p) {
        return p;
    }
    
    void call() {
        int i = m(9);
    }
    Object o = null;
}

subtype constraint: Variable 2 at method Primitive#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class Primitive extends type; tree <<missing tree>> within 
class Primitive {
    
    Primitive() {
        super();
    }
    int i = 5;
    
    int m(int p) {
        return p;
    }
    
    void call() {
        int i = m(9);
    }
    Object o = null;
}

subtype constraint: Variable 4 at method Primitive#m(I):I receiver parameter 0; tree <<missing tree>> within 
int m(int p) {
    return p;
}Atm: @VarAnnot(4) Primitive  <:  Variable 0 at class Primitive extends type; tree <<missing tree>> within 
class Primitive {
    
    Primitive() {
        super();
    }
    int i = 5;
    
    int m(int p) {
        return p;
    }
    
    void call() {
        int i = m(9);
    }
    Object o = null;
}

subtype constraint: Variable 5 at method Primitive#call():V receiver parameter 0; tree <<missing tree>> within 
void call() {
    int i = m(9);
}Atm: @VarAnnot(5) Primitive  <:  Variable 0 at class Primitive extends type; tree <<missing tree>> within 
class Primitive {
    
    Primitive() {
        super();
    }
    int i = 5;
    
    int m(int p) {
        return p;
    }
    
    void call() {
        int i = m(9);
    }
    Object o = null;
}

checkers.inference.InstanceMethodCallConstraint(
contextVp: method Primitive#call():V constraint position; 
calledVp: method Primitive#m(I):I; 
receiver: Variable 5 at method Primitive#call():V receiver parameter 0; tree <<missing tree>> within 
void call() {
    int i = m(9);
}Atm: @VarAnnot(5) Primitive; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(); 
)

checkers.inference.InstanceMethodCallConstraint(
contextVp: method Primitive#call():V constraint position; 
calledVp: method Primitive#m(I):I; 
receiver: Variable 5 at method Primitive#call():V receiver parameter 0; tree <<missing tree>> within 
void call() {
    int i = m(9);
}Atm: @VarAnnot(5) Primitive; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(); 
)

subtype constraint: Literal(NULL_LITERAL, "null")  <:  Variable 1 at class Primitive field o; tree Object

