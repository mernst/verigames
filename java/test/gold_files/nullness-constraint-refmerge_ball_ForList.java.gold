Constraints:
SubtypeConstraint( Constant(@nninf.quals.Nullable)  <:  Variable 0 at class ForList extends type; tree <<missing tree>> within 
class ForList {
    
    ForList() {
        super();
    }
    
    void test(List input) {
        Object out = null;
        for (Object o : input) {
            if (out == null) {
                out = o;
            }
            out.toString();
        }
    }
} )

SubtypeConstraint( Variable 1 at method ForList#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class ForList extends type; tree <<missing tree>> within 
class ForList {
    
    ForList() {
        super();
    }
    
    void test(List input) {
        Object out = null;
        for (Object o : input) {
            if (out == null) {
                out = o;
            }
            out.toString();
        }
    }
} )

SubtypeConstraint( Variable 2 at method ForList#test(Ljava/util/List;):V receiver; tree <<missing tree>> within 
void test(List input) {
    Object out = null;
    for (Object o : input) {
        if (out == null) {
            out = o;
        }
        out.toString();
    }
}Atm: @VarAnnot(2) ForList  <:  Variable 0 at class ForList extends type; tree <<missing tree>> within 
class ForList {
    
    ForList() {
        super();
    }
    
    void test(List input) {
        Object out = null;
        for (Object o : input) {
            if (out == null) {
                out = o;
            }
            out.toString();
        }
    }
} )

SubtypeConstraint( Literal(NULL_LITERAL, "null")  <:  Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object )

SubtypeConstraint( Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object  <:  RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set() )

SubtypeConstraint( RefinementVariable #6 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: true mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set()))  <:  RefinementVariable #9 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set()) )

SubtypeConstraint( RefinementVariable #8 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set()))  <:  RefinementVariable #9 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set()) )

SubtypeConstraint( RefinementVariable #9 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set())  <:  RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set() )

BallSizeTestConstraint( input:RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(), super: RefinementVariable #7 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: true mergedTo: Set(), subtype: RefinementVariable #6 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: true mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set())) )

InequalityConstraint( context: RefinementVP in method ForList#test(Ljava/util/List;):V, RefinementVariable #6 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: true mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set())) != Constant(@nninf.quals.Nullable) )

EqualityConstraint( RefinementVariable #8 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set())) = Variable 5 at method ForList#test(Ljava/util/List;):V local variable o(0); tree Object )

SubtypeConstraint( Variable 5 at method ForList#test(Ljava/util/List;):V local variable o(0); tree Object  <:  Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object )

SubtypeConstraint( RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set()  <:  Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object )

SubtypeConstraint( RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set()  <:  CombVariable #11 )

SubtypeConstraint( Literal(NULL_LITERAL, "null")  <:  CombVariable #11 )

InequalityConstraint( context: method ForList#test(Ljava/util/List;):V constraint position, Literal(NULL_LITERAL, "null") != Constant(@nninf.quals.Nullable) )

SubtypeConstraint( RefinementVariable #9 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set())  <:  Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object )

InequalityConstraint( context: method ForList#test(Ljava/util/List;):V constraint position, RefinementVariable #9 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set(RefinementVariable #10 Declared Variable: Variable 4 at method ForList#test(Ljava/util/List;):V local variable out(0); tree Object IfTest: false mergedTo: Set()) != Constant(@nninf.quals.Nullable) )

InequalityConstraint( context: method ForList#test(Ljava/util/List;):V constraint position, Variable 3 at method ForList#test(Ljava/util/List;):V parameter 0; tree List != Constant(@nninf.quals.Nullable) )

