Constraints:
subtype constraint: Constant(@nninf.quals.Nullable)  <:  Variable 0 at class IfParam extends type; tree <<missing tree>> within 
class IfParam {
    
    IfParam() {
        super();
    }
    
    void test(String a) {
        if (a == null) {
            a = null;
        }
        a.toString();
    }
}

subtype constraint: Variable 1 at method IfParam#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class IfParam extends type; tree <<missing tree>> within 
class IfParam {
    
    IfParam() {
        super();
    }
    
    void test(String a) {
        if (a == null) {
            a = null;
        }
        a.toString();
    }
}

subtype constraint: Variable 2 at method IfParam#test(Ljava/lang/String;):V receiver; tree <<missing tree>> within 
void test(String a) {
    if (a == null) {
        a = null;
    }
    a.toString();
}Atm: @VarAnnot(2) IfParam  <:  Variable 0 at class IfParam extends type; tree <<missing tree>> within 
class IfParam {
    
    IfParam() {
        super();
    }
    
    void test(String a) {
        if (a == null) {
            a = null;
        }
        a.toString();
    }
}

equality constraint: RefinementVariable #4 Declared Variable: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String IfTest: false mergedTo: Some(RefinementVariable #5 Declared Variable: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String IfTest: false mergedTo: None) = Literal(NULL_LITERAL, "null")

subtype constraint: Literal(NULL_LITERAL, "null")  <:  Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String

subtype constraint: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String  <:  CombVariable #6

subtype constraint: Literal(NULL_LITERAL, "null")  <:  CombVariable #6

inequality constraint at method IfParam#test(Ljava/lang/String;):V constraint position: Literal(NULL_LITERAL, "null") != Constant(@nninf.quals.Nullable)

subtype constraint: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String  <:  RefinementVariable #5 Declared Variable: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String IfTest: false mergedTo: None

subtype constraint: RefinementVariable #4 Declared Variable: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String IfTest: false mergedTo: Some(RefinementVariable #5 Declared Variable: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String IfTest: false mergedTo: None)  <:  RefinementVariable #5 Declared Variable: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String IfTest: false mergedTo: None

subtype constraint: RefinementVariable #5 Declared Variable: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String IfTest: false mergedTo: None  <:  Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String

inequality constraint at method IfParam#test(Ljava/lang/String;):V constraint position: RefinementVariable #5 Declared Variable: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String IfTest: false mergedTo: None != Constant(@nninf.quals.Nullable)

subtype constraint: RefinementVariable #4 Declared Variable: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String IfTest: false mergedTo: Some(RefinementVariable #5 Declared Variable: Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String IfTest: false mergedTo: None)  <:  Variable 3 at method IfParam#test(Ljava/lang/String;):V parameter 0; tree String

