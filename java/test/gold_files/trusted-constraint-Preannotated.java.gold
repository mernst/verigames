Constraints:
SubtypeConstraint( Constant(@trusted.quals.Untrusted)  <:  Variable 0 at class Preannotated extends type; tree <<missing tree>> within 
class Preannotated {
    
    Preannotated() {
        super();
    }
    @NonNull()
    String s = "not null";
} )

SubtypeConstraint( Variable 2 at method Preannotated#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class Preannotated extends type; tree <<missing tree>> within 
class Preannotated {
    
    Preannotated() {
        super();
    }
    @NonNull()
    String s = "not null";
} )

SubtypeConstraint( Literal(STRING_LITERAL, "not null")  <:  Variable 1 at class Preannotated field s; tree String )

