Constraints:
subtype constraint: Constant(@trusted.quals.Untrusted)  <:  Variable 0 at class IfElse extends type; tree <<missing tree>> within 
class IfElse {
    
    IfElse() {
        super();
    }
    
    void test() {
        String a = null;
        if (a == null) {
            a = "";
        } else {
            a = "";
        }
        a.toString();
    }
}

subtype constraint: Variable 1 at method IfElse#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class IfElse extends type; tree <<missing tree>> within 
class IfElse {
    
    IfElse() {
        super();
    }
    
    void test() {
        String a = null;
        if (a == null) {
            a = "";
        } else {
            a = "";
        }
        a.toString();
    }
}

subtype constraint: Variable 2 at method IfElse#test():V receiver; tree <<missing tree>> within 
void test() {
    String a = null;
    if (a == null) {
        a = "";
    } else {
        a = "";
    }
    a.toString();
}Atm: @VarAnnot(2) IfElse  <:  Variable 0 at class IfElse extends type; tree <<missing tree>> within 
class IfElse {
    
    IfElse() {
        super();
    }
    
    void test() {
        String a = null;
        if (a == null) {
            a = "";
        } else {
            a = "";
        }
        a.toString();
    }
}

subtype constraint: Literal(NULL_LITERAL, "null")  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String

equality constraint: RefinementVariable #4 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Some(RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: None) = Literal(STRING_LITERAL, "")

subtype constraint: Literal(STRING_LITERAL, "")  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String

equality constraint: RefinementVariable #5 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Some(RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: None) = Literal(STRING_LITERAL, "")

subtype constraint: RefinementVariable #4 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Some(RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: None)  <:  RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: None

subtype constraint: RefinementVariable #5 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Some(RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: None)  <:  RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: None

subtype constraint: RefinementVariable #4 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Some(RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: None)  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String

subtype constraint: RefinementVariable #5 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Some(RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: None)  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String

subtype constraint: RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: None  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String

