Constraints:
SubtypeConstraint( Constant(@nninf.quals.Nullable)  <:  Variable 0 at class IfElse extends type; tree <<missing tree>> within 
class IfElse {
    
    IfElse() {
        super();
    }
    
    void test() {
        String a = null;
        if (a == null) {
            a = "";
        } else {
            a = "";
        }
        a.toString();
    }
} )

SubtypeConstraint( Variable 1 at method IfElse#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class IfElse extends type; tree <<missing tree>> within 
class IfElse {
    
    IfElse() {
        super();
    }
    
    void test() {
        String a = null;
        if (a == null) {
            a = "";
        } else {
            a = "";
        }
        a.toString();
    }
} )

SubtypeConstraint( Variable 2 at method IfElse#test():V receiver; tree <<missing tree>> within 
void test() {
    String a = null;
    if (a == null) {
        a = "";
    } else {
        a = "";
    }
    a.toString();
}Atm: @VarAnnot(2) IfElse  <:  Variable 0 at class IfElse extends type; tree <<missing tree>> within 
class IfElse {
    
    IfElse() {
        super();
    }
    
    void test() {
        String a = null;
        if (a == null) {
            a = "";
        } else {
            a = "";
        }
        a.toString();
    }
} )

SubtypeConstraint( Literal(NULL_LITERAL, "null")  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String )

BallSizeTestConstraint( input:Variable 3 at method IfElse#test():V local variable a(0); tree String, super: RefinementVariable #5 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: true mergedTo: Set(), subtype: RefinementVariable #4 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: true mergedTo: Set() )

InequalityConstraint( context: RefinementVP in method IfElse#test():V, RefinementVariable #4 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: true mergedTo: Set() != Constant(@nninf.quals.Nullable) )

EqualityConstraint( RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #8 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set()) = Literal(STRING_LITERAL, "") )

SubtypeConstraint( Literal(STRING_LITERAL, "")  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String )

EqualityConstraint( RefinementVariable #7 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #8 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set()) = Literal(STRING_LITERAL, "") )

SubtypeConstraint( Variable 3 at method IfElse#test():V local variable a(0); tree String  <:  CombVariable #9 )

SubtypeConstraint( Literal(NULL_LITERAL, "null")  <:  CombVariable #9 )

InequalityConstraint( context: method IfElse#test():V constraint position, Literal(NULL_LITERAL, "null") != Constant(@nninf.quals.Nullable) )

SubtypeConstraint( RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #8 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set())  <:  RefinementVariable #8 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set() )

SubtypeConstraint( RefinementVariable #7 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #8 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set())  <:  RefinementVariable #8 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set() )

SubtypeConstraint( RefinementVariable #8 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set()  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String )

InequalityConstraint( context: method IfElse#test():V constraint position, RefinementVariable #8 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: Set() != Constant(@nninf.quals.Nullable) )

