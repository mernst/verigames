Constraints:
SubtypeConstraint( Constant(@nninf.quals.Nullable)  <:  Variable 0 at class NestedClassAnnotations extends type; tree <<missing tree>> within 
class NestedClassAnnotations {
    
    NestedClassAnnotations() {
        super();
    }
    O1.O2.O3.NestedStatic n;
} )

SubtypeConstraint( Variable 1 at method NestedClassAnnotations#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class NestedClassAnnotations extends type; tree <<missing tree>> within 
class NestedClassAnnotations {
    
    NestedClassAnnotations() {
        super();
    }
    O1.O2.O3.NestedStatic n;
} )

StubBoardUseConstraint(java.lang.Object,java.lang.Object#<init>():void,method NestedClassAnnotations#<init>():V constraint position,null,List(),List(),List(),List(),List(),List(Constant(@nninf.quals.Nullable)))

checkers.inference.InstanceMethodCallConstraint(
contextVp: method NestedClassAnnotations#<init>():V constraint position; 
calledVp: None; 
receiver: null; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Constant(@nninf.quals.Nullable)); 
)

SubtypeConstraint( Constant(@nninf.quals.Nullable)  <:  Variable 3 at class O1 extends type; tree <<missing tree>> within 
class O1 {
    
    O1() {
        super();
    }
    
    static class O2 {
        
        O2() {
            super();
        }
        
        static class O3 {
            
            O3() {
                super();
            }
            
            static class NestedStatic {
                
                NestedStatic() {
                    super();
                }
            }
        }
    }
} )

SubtypeConstraint( Variable 4 at method O1#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 3 at class O1 extends type; tree <<missing tree>> within 
class O1 {
    
    O1() {
        super();
    }
    
    static class O2 {
        
        O2() {
            super();
        }
        
        static class O3 {
            
            O3() {
                super();
            }
            
            static class NestedStatic {
                
                NestedStatic() {
                    super();
                }
            }
        }
    }
} )

checkers.inference.InstanceMethodCallConstraint(
contextVp: method O1#<init>():V constraint position; 
calledVp: None; 
receiver: null; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Constant(@nninf.quals.Nullable)); 
)

SubtypeConstraint( Constant(@nninf.quals.Nullable)  <:  Variable 5 at class O1$O2 extends type; tree <<missing tree>> within 
static class O2 {
    
    O2() {
        super();
    }
    
    static class O3 {
        
        O3() {
            super();
        }
        
        static class NestedStatic {
            
            NestedStatic() {
                super();
            }
        }
    }
} )

SubtypeConstraint( Variable 6 at method O1$O2#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 5 at class O1$O2 extends type; tree <<missing tree>> within 
static class O2 {
    
    O2() {
        super();
    }
    
    static class O3 {
        
        O3() {
            super();
        }
        
        static class NestedStatic {
            
            NestedStatic() {
                super();
            }
        }
    }
} )

checkers.inference.InstanceMethodCallConstraint(
contextVp: method O1$O2#<init>():V constraint position; 
calledVp: None; 
receiver: null; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Constant(@nninf.quals.Nullable)); 
)

SubtypeConstraint( Constant(@nninf.quals.Nullable)  <:  Variable 7 at class O1$O2$O3 extends type; tree <<missing tree>> within 
static class O3 {
    
    O3() {
        super();
    }
    
    static class NestedStatic {
        
        NestedStatic() {
            super();
        }
    }
} )

SubtypeConstraint( Variable 8 at method O1$O2$O3#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 7 at class O1$O2$O3 extends type; tree <<missing tree>> within 
static class O3 {
    
    O3() {
        super();
    }
    
    static class NestedStatic {
        
        NestedStatic() {
            super();
        }
    }
} )

checkers.inference.InstanceMethodCallConstraint(
contextVp: method O1$O2$O3#<init>():V constraint position; 
calledVp: None; 
receiver: null; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Constant(@nninf.quals.Nullable)); 
)

SubtypeConstraint( Constant(@nninf.quals.Nullable)  <:  Variable 9 at class O1$O2$O3$NestedStatic extends type; tree <<missing tree>> within 
static class NestedStatic {
    
    NestedStatic() {
        super();
    }
} )

SubtypeConstraint( Variable 10 at method O1$O2$O3$NestedStatic#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 9 at class O1$O2$O3$NestedStatic extends type; tree <<missing tree>> within 
static class NestedStatic {
    
    NestedStatic() {
        super();
    }
} )

checkers.inference.InstanceMethodCallConstraint(
contextVp: method O1$O2$O3$NestedStatic#<init>():V constraint position; 
calledVp: None; 
receiver: null; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Constant(@nninf.quals.Nullable)); 
)

