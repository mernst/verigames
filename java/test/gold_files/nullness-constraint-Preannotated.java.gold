Constraints:
SubtypeConstraint( Constant(@nninf.quals.Nullable)  <:  Variable 0 at class Preannotated extends type; tree <<missing tree>> within 
class Preannotated {
    
    Preannotated() {
        super();
    }
    @NonNull()
    String s = "not null";
} )

SubtypeConstraint( Variable 2 at method Preannotated#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class Preannotated extends type; tree <<missing tree>> within 
class Preannotated {
    
    Preannotated() {
        super();
    }
    @NonNull()
    String s = "not null";
} )

StubBoardUseConstraint(java.lang.Object,java.lang.Object#<init>():void,method Preannotated#<init>():V constraint position,null,List(),List(),List(),List(),List(),List(Constant(@nninf.quals.Nullable)))

checkers.inference.InstanceMethodCallConstraint(
contextVp: method Preannotated#<init>():V constraint position; 
calledVp: None; 
receiver: null; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Constant(@nninf.quals.Nullable)); 
)

SubtypeConstraint( Literal(STRING_LITERAL, "not null")  <:  Variable 1 at class Preannotated field s; tree String )

