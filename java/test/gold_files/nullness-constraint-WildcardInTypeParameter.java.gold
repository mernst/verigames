Constraints:
subtype constraint: Constant(@nninf.quals.Nullable)  <:  Variable 0 at class WilcardInTypeParameter class type parameter bound 0 & 0; tree List at position ((3,0)) within T extends List<?>

subtype constraint: Constant(@nninf.quals.Nullable)  <:  Variable 3 at class WilcardInTypeParameter extends type; tree <<missing tree>> within 
class WilcardInTypeParameter<T extends List<?>> {
    
    WilcardInTypeParameter() {
        super();
    }
    
    private void m1(WilcardInTypeParameter<List<? extends String>> test) {
    }
}

subtype constraint: Variable 4 at method WilcardInTypeParameter#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 3 at class WilcardInTypeParameter extends type; tree <<missing tree>> within 
class WilcardInTypeParameter<T extends List<?>> {
    
    WilcardInTypeParameter() {
        super();
    }
    
    private void m1(WilcardInTypeParameter<List<? extends String>> test) {
    }
}

subtype constraint: Variable 5 at method WilcardInTypeParameter#m1(LWilcardInTypeParameter;):V receiver; tree <<missing tree>> within 
private void m1(WilcardInTypeParameter<List<? extends String>> test) {
}Atm: @VarAnnot(5) WilcardInTypeParameter<T extends List<? extends Object>>  <:  Variable 3 at class WilcardInTypeParameter extends type; tree <<missing tree>> within 
class WilcardInTypeParameter<T extends List<?>> {
    
    WilcardInTypeParameter() {
        super();
    }
    
    private void m1(WilcardInTypeParameter<List<? extends String>> test) {
    }
}

