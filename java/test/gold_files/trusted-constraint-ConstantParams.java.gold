Constraints:
SubtypeConstraint( Constant(@trusted.quals.Untrusted)  <:  Variable 0 at class ConstantParams extends type; tree <<missing tree>> within 
class ConstantParams {
    
    ConstantParams() {
        super();
    }
    
    void test2(@NonNull()
    String param) {
        @NonNull()
        String c = null;
    }
} )

SubtypeConstraint( Variable 1 at method ConstantParams#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class ConstantParams extends type; tree <<missing tree>> within 
class ConstantParams {
    
    ConstantParams() {
        super();
    }
    
    void test2(@NonNull()
    String param) {
        @NonNull()
        String c = null;
    }
} )

SubtypeConstraint( Variable 2 at method ConstantParams#test2(Ljava/lang/String;):V receiver; tree <<missing tree>> within 
void test2(@NonNull()
String param) {
    @NonNull()
    String c = null;
}Atm: @VarAnnot(2) ConstantParams  <:  Variable 0 at class ConstantParams extends type; tree <<missing tree>> within 
class ConstantParams {
    
    ConstantParams() {
        super();
    }
    
    void test2(@NonNull()
    String param) {
        @NonNull()
        String c = null;
    }
} )

SubtypeConstraint( Literal(NULL_LITERAL, "null")  <:  Variable 4 at method ConstantParams#test2(Ljava/lang/String;):V local variable c(0); tree String )

