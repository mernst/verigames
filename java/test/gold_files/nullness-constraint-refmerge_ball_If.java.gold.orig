Constraints:
subtype constraint: Constant(@nninf.quals.Nullable)  <:  Variable 0 at class If extends type; tree <<missing tree>> within 
class If {
    
    If() {
        super();
    }
    
    void test() {
        String a = null;
        if (a == null) {
            a = "";
        }
        a.toString();
    }
}

subtype constraint: Variable 1 at method If#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class If extends type; tree <<missing tree>> within 
class If {
    
    If() {
        super();
    }
    
    void test() {
        String a = null;
        if (a == null) {
            a = "";
        }
        a.toString();
    }
}

subtype constraint: Variable 2 at method If#test():V receiver; tree <<missing tree>> within 
void test() {
    String a = null;
    if (a == null) {
        a = "";
    }
    a.toString();
}Atm: @VarAnnot(2) If  <:  Variable 0 at class If extends type; tree <<missing tree>> within 
class If {
    
    If() {
        super();
    }
    
    void test() {
        String a = null;
        if (a == null) {
            a = "";
        }
        a.toString();
    }
}

subtype constraint: Literal(NULL_LITERAL, "null")  <:  Variable 3 at method If#test():V local variable a(0); tree String

equality constraint: RefinementVariable #4 Declared Variable: Variable 3 at method If#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #5 Declared Variable: Variable 3 at method If#test():V local variable a(0); tree String IfTest: false mergedTo: Set()) = Literal(STRING_LITERAL, "")

subtype constraint: Literal(STRING_LITERAL, "")  <:  Variable 3 at method If#test():V local variable a(0); tree String

subtype constraint: Variable 3 at method If#test():V local variable a(0); tree String  <:  CombVariable #6

subtype constraint: Literal(NULL_LITERAL, "null")  <:  CombVariable #6

inequality constraint at method If#test():V constraint position: Literal(NULL_LITERAL, "null") != Constant(@nninf.quals.Nullable)

subtype constraint: Variable 3 at method If#test():V local variable a(0); tree String  <:  RefinementVariable #5 Declared Variable: Variable 3 at method If#test():V local variable a(0); tree String IfTest: false mergedTo: Set()

subtype constraint: RefinementVariable #4 Declared Variable: Variable 3 at method If#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #5 Declared Variable: Variable 3 at method If#test():V local variable a(0); tree String IfTest: false mergedTo: Set())  <:  RefinementVariable #5 Declared Variable: Variable 3 at method If#test():V local variable a(0); tree String IfTest: false mergedTo: Set()

subtype constraint: RefinementVariable #5 Declared Variable: Variable 3 at method If#test():V local variable a(0); tree String IfTest: false mergedTo: Set()  <:  Variable 3 at method If#test():V local variable a(0); tree String

inequality constraint at method If#test():V constraint position: RefinementVariable #5 Declared Variable: Variable 3 at method If#test():V local variable a(0); tree String IfTest: false mergedTo: Set() != Constant(@nninf.quals.Nullable)

