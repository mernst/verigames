Constraints:
equality constraint: Variable 3 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V parameter 0; tree boolean = Constant(@nninf.quals.NonNull)

subtype constraint: Constant(@nninf.quals.Nullable)  <:  Variable 0 at class TernaryDecl extends type; tree <<missing tree>> within 
class TernaryDecl {
    
    TernaryDecl() {
        super();
    }
    
    void test(boolean test, String a, String b) {
        String c = test ? a : b;
        c.toString();
    }
}

subtype constraint: Variable 1 at method TernaryDecl#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class TernaryDecl extends type; tree <<missing tree>> within 
class TernaryDecl {
    
    TernaryDecl() {
        super();
    }
    
    void test(boolean test, String a, String b) {
        String c = test ? a : b;
        c.toString();
    }
}

subtype constraint: Variable 2 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V receiver; tree <<missing tree>> within 
void test(boolean test, String a, String b) {
    String c = test ? a : b;
    c.toString();
}Atm: @VarAnnot(2) TernaryDecl  <:  Variable 0 at class TernaryDecl extends type; tree <<missing tree>> within 
class TernaryDecl {
    
    TernaryDecl() {
        super();
    }
    
    void test(boolean test, String a, String b) {
        String c = test ? a : b;
        c.toString();
    }
}

subtype constraint: Variable 4 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V parameter 1; tree String  <:  CombVariable #8

subtype constraint: Variable 5 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V parameter 2; tree String  <:  CombVariable #8

subtype constraint: Variable 4 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V parameter 1; tree String  <:  RefinementVariable #6 Declared Variable: Variable 5 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V parameter 2; tree String IfTest: false mergedTo: Set()

subtype constraint: Variable 5 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V parameter 2; tree String  <:  RefinementVariable #6 Declared Variable: Variable 5 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V parameter 2; tree String IfTest: false mergedTo: Set()

subtype constraint: RefinementVariable #6 Declared Variable: Variable 5 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V parameter 2; tree String IfTest: false mergedTo: Set()  <:  CombVariable #8

inequality constraint at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V constraint position: Variable 3 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V parameter 0; tree boolean != Constant(@nninf.quals.Nullable)

subtype constraint: RefinementVariable #6 Declared Variable: Variable 5 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V parameter 2; tree String IfTest: false mergedTo: Set()  <:  Variable 7 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V local variable c(0); tree String

inequality constraint at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V constraint position: Variable 7 at method TernaryDecl#test(ZLjava/lang/String;Ljava/lang/String;):V local variable c(0); tree String != Constant(@nninf.quals.Nullable)

