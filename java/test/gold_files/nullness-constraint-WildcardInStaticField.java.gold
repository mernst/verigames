Constraints:
SubtypeConstraint( Constant(@nninf.quals.Nullable)  <:  Variable 0 at class StaticMethod extends type; tree <<missing tree>> within 
class StaticMethod {
    
    StaticMethod() {
        super();
    }
    public static List<?> something;
    
    public static void method(String param) {
        String other = param;
        something = new ArrayList<String>();
    }
    
    public void instMethod() {
        method("YUM");
    }
} )

SubtypeConstraint( Variable 1 at method StaticMethod#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class StaticMethod extends type; tree <<missing tree>> within 
class StaticMethod {
    
    StaticMethod() {
        super();
    }
    public static List<?> something;
    
    public static void method(String param) {
        String other = param;
        something = new ArrayList<String>();
    }
    
    public void instMethod() {
        method("YUM");
    }
} )

SubtypeConstraint( Variable 2 at method StaticMethod#method(Ljava/lang/String;):V parameter 0; tree String  <:  Variable 6 at method StaticMethod#method(Ljava/lang/String;):V local variable other(0); tree String )

InequalityConstraint( context: method StaticMethod#method(Ljava/lang/String;):V constraint position, Variable 7 at method StaticMethod#method(Ljava/lang/String;):V creation 0; tree ArrayList within ArrayList<String> != Constant(@nninf.quals.Nullable) )

SubtypeConstraint( RefinementVariable #9 Declared Variable: Variable 4 at class StaticMethod static field something; tree List within List<?> IfTest: false mergedTo: Set()  <:  Variable 4 at class StaticMethod static field something; tree List within List<?> )

checkers.inference.FieldAssignmentConstraint(
contextVp: method StaticMethod#method(Ljava/lang/String;):V constraint position; 
calledVp: class StaticMethod static field something; 
receiver: null; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: ( Variable 7 at method StaticMethod#method(Ljava/lang/String;):V creation 0; tree ArrayList within ArrayList<String>, Variable 8 at method StaticMethod#method(Ljava/lang/String;):V creation 0; tree String at position ((3,0)) within ArrayList<String> ); 
result: List(); 
)

EqualityConstraint( RefinementVariable #9 Declared Variable: Variable 4 at class StaticMethod static field something; tree List within List<?> IfTest: false mergedTo: Set() = Variable 7 at method StaticMethod#method(Ljava/lang/String;):V creation 0; tree ArrayList within ArrayList<String> )

SubtypeConstraint( Variable 7 at method StaticMethod#method(Ljava/lang/String;):V creation 0; tree ArrayList within ArrayList<String>  <:  Variable 4 at class StaticMethod static field something; tree List within List<?> )

SubtypeConstraint( Variable 3 at method StaticMethod#instMethod():V receiver; tree <<missing tree>> within 
public void instMethod() {
    method("YUM");
}Atm: @VarAnnot(3) StaticMethod  <:  Variable 0 at class StaticMethod extends type; tree <<missing tree>> within 
class StaticMethod {
    
    StaticMethod() {
        super();
    }
    public static List<?> something;
    
    public static void method(String param) {
        String other = param;
        something = new ArrayList<String>();
    }
    
    public void instMethod() {
        method("YUM");
    }
} )

checkers.inference.StaticMethodCallConstraint(
contextVp: method StaticMethod#instMethod():V constraint position; 
calledVp: method StaticMethod#method(Ljava/lang/String;):V; 
receiver: null; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: ( Literal(STRING_LITERAL, "YUM") ); 
result: List(); 
)

