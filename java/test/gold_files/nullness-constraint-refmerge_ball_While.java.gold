Constraints:
equality constraint: Variable 3 at method While#test(Z):V parameter 0; tree boolean = Constant(@nninf.quals.NonNull)

subtype constraint: Constant(@nninf.quals.Nullable)  <:  Variable 0 at class While extends type; tree <<missing tree>> within 
class While {
    
    While() {
        super();
    }
    
    void test(boolean b) {
        String a = "";
        while (b) {
            if (a == null) {
                a.toString();
            } else {
                a = null;
            }
        }
    }
}

subtype constraint: Variable 1 at method While#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class While extends type; tree <<missing tree>> within 
class While {
    
    While() {
        super();
    }
    
    void test(boolean b) {
        String a = "";
        while (b) {
            if (a == null) {
                a.toString();
            } else {
                a = null;
            }
        }
    }
}

subtype constraint: Variable 2 at method While#test(Z):V receiver; tree <<missing tree>> within 
void test(boolean b) {
    String a = "";
    while (b) {
        if (a == null) {
            a.toString();
        } else {
            a = null;
        }
    }
}Atm: @VarAnnot(2) While  <:  Variable 0 at class While extends type; tree <<missing tree>> within 
class While {
    
    While() {
        super();
    }
    
    void test(boolean b) {
        String a = "";
        while (b) {
            if (a == null) {
                a.toString();
            } else {
                a = null;
            }
        }
    }
}

subtype constraint: Literal(STRING_LITERAL, "")  <:  Variable 4 at method While#test(Z):V local variable a(0); tree String

subtype constraint: Variable 4 at method While#test(Z):V local variable a(0); tree String  <:  RefinementVariable #8 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set())

subtype constraint: RefinementVariable #7 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #8 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set()))  <:  RefinementVariable #8 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set())

subtype constraint: RefinementVariable #8 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set())  <:  RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set()

subtype constraint: RefinementVariable #6 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: true mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set())  <:  RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set()

ballsizetest constraint: varRefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set()super: RefinementVariable #6 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: true mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set()) subtype: RefinementVariable #5 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: true mergedTo: Set()

inequality constraint at RefinementVP in method While#test(Z):V: RefinementVariable #5 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: true mergedTo: Set() != Constant(@nninf.quals.Nullable)

inequality constraint at method While#test(Z):V constraint position: RefinementVariable #6 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: true mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set()) != Constant(@nninf.quals.Nullable)

equality constraint: RefinementVariable #7 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #8 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set())) = Literal(NULL_LITERAL, "null")

subtype constraint: Literal(NULL_LITERAL, "null")  <:  Variable 4 at method While#test(Z):V local variable a(0); tree String

subtype constraint: RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set()  <:  Variable 4 at method While#test(Z):V local variable a(0); tree String

subtype constraint: RefinementVariable #9 Declared Variable: Variable 4 at method While#test(Z):V local variable a(0); tree String IfTest: false mergedTo: Set()  <:  CombVariable #10

subtype constraint: Literal(NULL_LITERAL, "null")  <:  CombVariable #10

inequality constraint at method While#test(Z):V constraint position: Literal(NULL_LITERAL, "null") != Constant(@nninf.quals.Nullable)

inequality constraint at method While#test(Z):V constraint position: Variable 3 at method While#test(Z):V parameter 0; tree boolean != Constant(@nninf.quals.Nullable)

