Constraints:
equality constraint: Variable 3 at method Switch#test():V local variable i(0); tree int = Constant(@nninf.quals.NonNull)

subtype constraint: Constant(@nninf.quals.Nullable)  <:  Variable 0 at class Switch extends type; tree <<missing tree>> within 
class Switch {
    
    Switch() {
        super();
    }
    
    void test() {
        int i = 1;
        String a = null;
        switch (i) {
        case 1: 
            a = "";
            break;
        
        case 2: 
            a = "";
            break;
        
        default: 
            a = null;
            break;
        
        }
        a.toString();
    }
}

subtype constraint: Variable 1 at method Switch#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class Switch extends type; tree <<missing tree>> within 
class Switch {
    
    Switch() {
        super();
    }
    
    void test() {
        int i = 1;
        String a = null;
        switch (i) {
        case 1: 
            a = "";
            break;
        
        case 2: 
            a = "";
            break;
        
        default: 
            a = null;
            break;
        
        }
        a.toString();
    }
}

subtype constraint: Variable 2 at method Switch#test():V receiver; tree <<missing tree>> within 
void test() {
    int i = 1;
    String a = null;
    switch (i) {
    case 1: 
        a = "";
        break;
    
    case 2: 
        a = "";
        break;
    
    default: 
        a = null;
        break;
    
    }
    a.toString();
}Atm: @VarAnnot(2) Switch  <:  Variable 0 at class Switch extends type; tree <<missing tree>> within 
class Switch {
    
    Switch() {
        super();
    }
    
    void test() {
        int i = 1;
        String a = null;
        switch (i) {
        case 1: 
            a = "";
            break;
        
        case 2: 
            a = "";
            break;
        
        default: 
            a = null;
            break;
        
        }
        a.toString();
    }
}

subtype constraint: Literal(NULL_LITERAL, "null")  <:  Variable 4 at method Switch#test():V local variable a(0); tree String

equality constraint: RefinementVariable #5 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #7 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set())) = Literal(STRING_LITERAL, "")

subtype constraint: Literal(STRING_LITERAL, "")  <:  Variable 4 at method Switch#test():V local variable a(0); tree String

equality constraint: RefinementVariable #6 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #7 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set())) = Literal(STRING_LITERAL, "")

equality constraint: RefinementVariable #8 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set()) = Literal(NULL_LITERAL, "null")

inequality constraint at method Switch#test():V constraint position: Variable 3 at method Switch#test():V local variable i(0); tree int != Constant(@nninf.quals.Nullable)

subtype constraint: RefinementVariable #5 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #7 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set()))  <:  RefinementVariable #7 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set())

subtype constraint: RefinementVariable #6 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #7 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set()))  <:  RefinementVariable #7 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set())

subtype constraint: RefinementVariable #7 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set())  <:  RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set()

subtype constraint: RefinementVariable #8 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set(RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set())  <:  RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set()

subtype constraint: RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set()  <:  Variable 4 at method Switch#test():V local variable a(0); tree String

inequality constraint at method Switch#test():V constraint position: RefinementVariable #9 Declared Variable: Variable 4 at method Switch#test():V local variable a(0); tree String IfTest: false mergedTo: Set() != Constant(@nninf.quals.Nullable)

