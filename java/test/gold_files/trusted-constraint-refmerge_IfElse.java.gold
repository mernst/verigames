Constraints:
SubtypeConstraint( Constant(@trusted.quals.Untrusted)  <:  Variable 0 at class IfElse extends type; tree <<missing tree>> within 
class IfElse {
    
    IfElse() {
        super();
    }
    
    void test() {
        String a = null;
        if (true) {
            a = "";
        } else {
            a = "";
        }
        a.toString();
    }
} )

SubtypeConstraint( Variable 1 at method IfElse#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class IfElse extends type; tree <<missing tree>> within 
class IfElse {
    
    IfElse() {
        super();
    }
    
    void test() {
        String a = null;
        if (true) {
            a = "";
        } else {
            a = "";
        }
        a.toString();
    }
} )

StubBoardUseConstraint(java.lang.Object,java.lang.Object#<init>():void,method IfElse#<init>():V constraint position,null,List(),List(),List(),List(),List(),List(Constant(@trusted.quals.Untrusted)))

checkers.inference.InstanceMethodCallConstraint(
contextVp: method IfElse#<init>():V constraint position; 
calledVp: None; 
receiver: null; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Constant(@trusted.quals.Untrusted)); 
)

SubtypeConstraint( Variable 2 at method IfElse#test():V receiver; tree <<missing tree>> within 
void test() {
    String a = null;
    if (true) {
        a = "";
    } else {
        a = "";
    }
    a.toString();
}Atm: @VarAnnot(2) IfElse  <:  Variable 0 at class IfElse extends type; tree <<missing tree>> within 
class IfElse {
    
    IfElse() {
        super();
    }
    
    void test() {
        String a = null;
        if (true) {
            a = "";
        } else {
            a = "";
        }
        a.toString();
    }
} )

SubtypeConstraint( Literal(NULL_LITERAL, "null")  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String )

EqualityConstraint( RefinementVariable #5 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: (Set(6 )) = Literal(STRING_LITERAL, "") )

SubtypeConstraint( Literal(STRING_LITERAL, "")  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String )

EqualityConstraint( RefinementVariable #4 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: (Set(6 )) = Literal(STRING_LITERAL, "") )

SubtypeConstraint( RefinementVariable #4 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: (Set(6 ))  <:  RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: (Set()) )

SubtypeConstraint( RefinementVariable #5 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: (Set(6 ))  <:  RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: (Set()) )

SubtypeConstraint( RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: (Set())  <:  Variable 3 at method IfElse#test():V local variable a(0); tree String )

StubBoardUseConstraint(java.lang.String,java.lang.String#toString():java.lang.String,method IfElse#test():V constraint position,Constant(@trusted.quals.Untrusted),List(),List(),List(),List(),List(),List(Constant(@trusted.quals.Untrusted)))

checkers.inference.InstanceMethodCallConstraint(
contextVp: method IfElse#test():V constraint position; 
calledVp: None; 
receiver: RefinementVariable #6 Declared Variable: Variable 3 at method IfElse#test():V local variable a(0); tree String IfTest: false mergedTo: (Set()); 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Constant(@trusted.quals.Untrusted)); 
)

