Constraints:
SubtypeConstraint( Constant(@nninf.quals.Nullable)  <:  Variable 0 at class FieldInitCast extends type; tree <<missing tree>> within 
class FieldInitCast {
    
    FieldInitCast() {
        super();
    }
    Object f;
    String g = (String)f;
} )

SubtypeConstraint( Variable 4 at method FieldInitCast#<init>():V return type; tree 
<init>() {
    super();
}  <:  Variable 0 at class FieldInitCast extends type; tree <<missing tree>> within 
class FieldInitCast {
    
    FieldInitCast() {
        super();
    }
    Object f;
    String g = (String)f;
} )

StubBoardUseConstraint(java.lang.Object,java.lang.Object#<init>():void,method FieldInitCast#<init>():V constraint position,null,List(),List(),List(),List(),List(),List(Constant(@nninf.quals.Nullable)))

checkers.inference.InstanceMethodCallConstraint(
contextVp: method FieldInitCast#<init>():V constraint position; 
calledVp: None; 
receiver: null; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Constant(@nninf.quals.Nullable)); 
)

SubtypeConstraint( Variable 1 at class FieldInitCast field f; tree Object  <:  Variable 2 at class FieldInitCast field g cast 0; tree String )

checkers.inference.FieldAccessConstraint(
contextVp: class FieldInitCast field g constraint position; 
calledVp: Some(class FieldInitCast field f); 
receiver: Constant(@nninf.quals.Nullable); 
methodTypeParamLBs: <  >; 
classTypeParamLBs: <  >; 
methodTypeArgs: <  >; 
classTypeArgs: <  >; 
args: (  ); 
result: List(Variable 1 at class FieldInitCast field f; tree Object); 
)

SubtypeConstraint( Variable 2 at class FieldInitCast field g cast 0; tree String  <:  Variable 3 at class FieldInitCast field g; tree String )

