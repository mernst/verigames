Constraints:
subtype constraint: Constant(@nninf.quals.Nullable)  <:  Variable 0 at class MyClass class type parameter bound 0 & 0; tree Object at position ((3,0)) within T extends Object

subtype constraint: Constant(@nninf.quals.Nullable)  <:  Variable 2 at class MyClass extends type; tree Object

subtype constraint: Variable 5 at method MyClass#<init>():V return type; tree 
<E extends Object><init>() {
    super();
}  <:  Variable 2 at class MyClass extends type; tree Object

subtype constraint: Constant(@nninf.quals.Nullable)  <:  Variable 3 at method MyClass#<init>():V method type parameter bound 0 & 0; tree Object at position ((3,0)) within E extends Object

subtype constraint: Variable 6 at method MyClass#m(Ljava/lang/Object;):V receiver; tree MyClass<T>  <:  Variable 2 at class MyClass extends type; tree Object

subtype constraint: Variable 1 at class MyClass class type parameter 0; tree T extends Object  <:  Constant(@nninf.quals.Nullable)

subtype constraint: Variable 8 at method MyClass#context():V receiver; tree <<missing tree>> within 
void context() {
    String s = "non null";
    MyClass<String> myc;
    myc = new MyClass<String>();
    myc.m(s);
}Atm: @VarAnnot(8) MyClass<T extends Object>  <:  Variable 2 at class MyClass extends type; tree Object

subtype constraint: Literal(STRING_LITERAL, "non null")  <:  Variable 9 at method MyClass#context():V local variable s(0); tree String

subtype constraint: Variable 4 at method MyClass#<init>():V method type parameter 0; tree E extends Object  <:  Constant(@nninf.quals.Nullable)

checkers.inference.InstanceMethodCallConstraint(
contextVp: method MyClass#context():V constraint position; 
calledVp: method MyClass#<init>():V; 
receiver: null; 
methodTypeParamLBs: < Variable 4 at method MyClass#<init>():V method type parameter 0; tree E extends Object >; 
classTypeParamLBs: < Variable 1 at class MyClass class type parameter 0; tree T extends Object >; 
methodTypeArgs: < List(Variable 14 at MethodTypeArgumentInMethodVP in method MyClass#context():V; tree <<missing tree>> at position ((3,0)) within new MyClass<String>()Atm: @VarAnnot(14) Object) >; 
classTypeArgs: < List(Variable 13 at method MyClass#context():V creation 0; tree String at position ((3,0)) within MyClass<String>) >; 
args: (  ); 
result: List(Variable 5 at method MyClass#<init>():V return type; tree 
<E extends Object><init>() {
    super();
}); 
)

inequality constraint at method MyClass#context():V constraint position: Variable 12 at method MyClass#context():V creation 0; tree MyClass within MyClass<String> != Constant(@nninf.quals.Nullable)

subtype constraint: Variable 12 at method MyClass#context():V creation 0; tree MyClass within MyClass<String>  <:  Variable 10 at method MyClass#context():V local variable myc(0); tree MyClass within MyClass<String>

equality constraint: Variable 11 at method MyClass#context():V local variable myc(0); tree String at position ((3,0)) within MyClass<String> = Variable 13 at method MyClass#context():V creation 0; tree String at position ((3,0)) within MyClass<String>

subtype constraint: RefinementVariable #15 Declared Variable: Variable 10 at method MyClass#context():V local variable myc(0); tree MyClass within MyClass<String>  <:  Variable 10 at method MyClass#context():V local variable myc(0); tree MyClass within MyClass<String>

inequality constraint at method MyClass#context():V constraint position: RefinementVariable #15 Declared Variable: Variable 10 at method MyClass#context():V local variable myc(0); tree MyClass within MyClass<String> != Constant(@nninf.quals.Nullable)

subtype constraint: Variable 7 at method MyClass#m(Ljava/lang/Object;):V parameter 0; tree T  <:  Constant(@nninf.quals.Nullable)

checkers.inference.InstanceMethodCallConstraint(
contextVp: method MyClass#context():V constraint position; 
calledVp: method MyClass#m(Ljava/lang/Object;):V; 
receiver: RefinementVariable #15 Declared Variable: Variable 10 at method MyClass#context():V local variable myc(0); tree MyClass within MyClass<String>; 
methodTypeParamLBs: <  >; 
classTypeParamLBs: < Variable 1 at class MyClass class type parameter 0; tree T extends Object >; 
methodTypeArgs: <  >; 
classTypeArgs: < List(Variable 11 at method MyClass#context():V local variable myc(0); tree String at position ((3,0)) within MyClass<String>) >; 
args: ( Variable 9 at method MyClass#context():V local variable s(0); tree String ); 
result: List(); 
)

