<?xml version="1.0"?>
<project name="Translation" default="build" basedir=".">
  <property name="src" location="src"/>
  <property name="bin" location="bin"/>
  <property name="lib" location="lib"/>
  <property name="doc" location="doc"/>
  <property environment="env"/>
  <presetdef name="jsr308.javac">
    <javac fork="yes">
      <!-- JSR308 related compiler arguments -->
      <compilerarg value="-version"/>
      <compilerarg value="-implicit:class"/>
      <compilerarg line="-Awarns -Xmaxwarns 10000"/>
      <compilerarg value="-J-Xbootclasspath/p:${env.CHECKERS}/binary/jsr308-all.jar"/>
      <compilerarg value="-XDTA:spacesincomments"/>
      <!-- ^ included so that Eclipse's formatter, which inserts spaces in annotation comments, can still be used -->
      <classpath>
        <pathelement location="${env.CHECKERS}/checkers.jar"/>
      </classpath>
    </javac>
  </presetdef>
  <target name="build">
    <mkdir dir="${bin}"/>
    <javac classpath="${env.CHECKERS}/checkers.jar;${lib}/javac.jar;${lib}/junit-4.8.2.jar" srcdir="${src}" destdir="${bin}" includeAntRuntime="false" debug="true"/>
  </target>
  <!-- check-nullness target checks nullness on every file that does not include "test(s)" in its directory path -->
  <target name="check-nullness" description="Check for nullness errors" depends="clean">
    <mkdir dir="${bin}"/>
    <!-- use jsr308.javac instead of javac -->
    <jsr308.javac classpath="${lib}/javac.jar;${lib}/junit-4.8.2.jar" srcdir="${src}" destdir="${bin}" excludes="**/test/**,**/tests/**" includeAntRuntime="false">
      <compilerarg line="-processor checkers.nullness.NullnessChecker"/>
      <compilerarg value="-Xbootclasspath/p:${env.CHECKERS}/jdk/jdk.jar"/>
      <compilerarg value="-J-Djsr308_imports=checkers.nullness.quals.*"/>
      <!-- optional, to not check library bodies: <compilerarg value="-AskipClasses=^(java\.awt\.|javax\.swing\.)"/> -->
    </jsr308.javac>
  </target>
  <target name="clean">
    <delete dir="${bin}"/>
  </target>
  <!-- junit tests -->
  <path id="test.classpath">
    <fileset dir="${lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>
  <target name="test" depends="clean, build, test.graph, test.level, test.layout, test.levelBuilder"/>
  <target name="test.level">
    <junit fork="yes" haltonfailure="yes" dir="${bin}/level/tests">
      <test name="level.tests.SpecificationTests"/>
      <test name="level.tests.ImplementationTests"/>
      <formatter type="plain" usefile="false"/>
      <classpath refid="test.classpath"/>
      <classpath>
        <pathelement path="${bin}"/>
      </classpath>
    </junit>
    <copy file="../../world.dtd" todir="${bin}/level/tests"/>
    <copy file="${src}/level/tests/levelWorldCreation/name_replace" todir="${bin}/level/tests"/>
    <copy file="${src}/level/tests/levelWorldCreation/names_list" todir="${bin}/level/tests"/>
  </target>
  <target name="test.layout">
    <junit fork="yes" haltonfailure="yes" dir="${bin}/layout/tests">
      <test name="layout.tests.SpecificationTests"/>
      <test name="layout.tests.ImplementationTests"/>
      <formatter type="plain" usefile="false"/>
      <classpath refid="test.classpath"/>
      <classpath>
        <pathelement path="${bin}"/>
      </classpath>
    </junit>
  </target>
  <target name="test.graph">
    <junit fork="yes" haltonfailure="yes" dir="${bin}/graph/tests">
      <test name="graph.tests.SpecificationTests"/>
      <test name="graph.tests.ImplementationTests"/>
      <formatter type="plain" usefile="false"/>
      <classpath refid="test.classpath"/>
      <classpath>
        <pathelement path="${bin}"/>
      </classpath>
    </junit>
  </target>
  <target name="test.levelBuilder">
    <junit fork="yes" haltonfailure="yes" dir="${bin}/levelBuilder/tests">
      <test name="levelBuilder.tests.SpecificationTests"/>
      <test name="levelBuilder.tests.ImplementationTests"/>
      <formatter type="plain" usefile="false"/>
      <classpath refid="test.classpath"/>
      <classpath>
        <pathelement path="${bin}"/>
      </classpath>
    </junit>
    <copy file="../../world.dtd" todir="${bin}/levelBuilder/tests"/>
  </target>

  <property name="docPackages" value="graph,layout,level,levelBuilder,translation,utilities"/>
  <target name="javadoc">
    <javadoc access="public"
             author="true"
             classpath="${lib}/junit-4.8.2.jar:${env.CHECKERS}/checkers.jar:${lib}/javac.jar"
             destdir="${doc}"
             nodeprecated="false"
             nodeprecatedlist="false"
             noindex="false"
             nonavbar="false"
             notree="false"
             packagenames="${docPackages}"
             source="1.6"
             sourcepath="${src}"
             splitindex="true"
             use="true"
             version="true"/>
  </target>
  <target name="javadoc.protected">
    <javadoc access="protected"
             author="true"
             classpath="${lib}/junit-4.8.2.jar:${env.CHECKERS}/checkers.jar:${lib}/javac.jar"
             destdir="${doc}"
             nodeprecated="false"
             nodeprecatedlist="false"
             noindex="false"
             nonavbar="false"
             notree="false"
             packagenames="${docPackages}"
             source="1.6"
             sourcepath="${src}"
             splitindex="true"
             use="true"
             version="true"/>
  </target>
  <target name="javadoc.package">
    <javadoc access="package"
             author="true"
             classpath="${lib}/junit-4.8.2.jar:${env.CHECKERS}/checkers.jar:${lib}/javac.jar"
             destdir="${doc}"
             nodeprecated="false"
             nodeprecatedlist="false"
             noindex="false"
             nonavbar="false"
             notree="false"
             packagenames="${docPackages}"
             source="1.6"
             sourcepath="${src}"
             splitindex="true"
             use="true"
             version="true"/>
  </target>
  <target name="javadoc.private">
    <javadoc access="private"
             author="true"
             classpath="${lib}/junit-4.8.2.jar:${env.CHECKERS}/checkers.jar:${lib}/javac.jar"
             destdir="${doc}"
             nodeprecated="false"
             nodeprecatedlist="false"
             noindex="false"
             nonavbar="false"
             notree="false"
             packagenames="${docPackages}"
             source="1.6"
             sourcepath="${src}"
             splitindex="true"
             use="true"
             version="true"/>
  </target>
</project>
