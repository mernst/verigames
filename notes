===========================================================================

http://games.cs.washington.edu/verigame/world1.html

===========================================================================

DARPA people:
Drew Dean
John Cheng (technical SETA)

===========================================================================

Verigames deliverables for Nat and Steph:
  file formats
  data structures
  hand-translated boards
  a complete and comprehensible algorithm that someone can code

We'll need these algorithms:
 * for user code:
    * program -> unoptimized network
    * network -> optimized network
 * for libraries:
    * annotated library -> optimized network



Verigames:  with only 2 values, why can't we solve the constraints in
linear time?

The answer is that the constraints are not solvable, in general.

The player needs to find a set of constraints that satisfies the tests but
not necessarily the type system.
Or, the player needs to find the place that an exception (cast) is needed.

----

Gameplay needs to specify when you drop a ball for type-based simulation.
Usually, but not always...

===========================================================================

Notes from meeting with Drew Dean, 8/9/2011:

The Director of DARPA is especially interested in modularity -- how to
break down a problem for crowdsourcing.  Here are some ways we can
crowdsource:
 * 1 person per level
 * possibly in parallel, with multiple people trying to solve each level
 * eventually, collaboratively on a single level (add chat feature)
 * each level can depend on, and thus use, results from other levels

===========================================================================

Drew would eventually like to run our tools on Apache, but it's written in
C.

Drew is also interested in incremental re-solving (when a small source code
modification is made after the previous version had been verified).

